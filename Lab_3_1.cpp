#include <iostream>
#include <time.h>

using namespace std;

struct och
{
    int d;
    och* next;
};

struct STEK
{
    double d;
    STEK* next;// указатель на следующий элемент списка (стек)
};

struct STEK2
{
    double d;
    STEK2* next;// указатель на следующий элемент списка (стек)
};

void printS(STEK* head, int K) //функция для вывода стэка в консоль
{
    cout << "Стэк: ";
    while (head != NULL) //выходим до встречи с пустым значением
    {
        cout << (*head).d << " "; //Выводим на экран элемент стека
        head = (*head).next; //Переходим к следующему элементу
    }
    cout << endl;
}

void ZapolnS(STEK* head, int K) // функция для подсчета суммы, произведения и среднего арифметического стэка и занесения данных в стэк2
{
    double sum = 0, pr = 1, sr;
    while (head != NULL) //проходимся по 1 стэку и увеличиваем данные
    {
        sum += (*head).d;
        pr *= (*head).d;
        head = (*head).next;
    }
    sr = sum / (K+1);

    STEK2* head2;//указатель на вершину стека
    head2 = NULL; //исходное состояние стека

    STEK2* t = NULL;

    for (int i = 0; i <= 2; i++) //заполняем стэк2 новыми данными
    {
        t = new (STEK2);
        (*t).next = NULL;
        if (i == 0)
        {
            (*t).d = sr;
        }
        else if (i == 1)
        {
            (*t).d = pr;
        }
        else if (i == 2)
        {
            (*t).d = sum;
        }

        (*t).next = head2;
        head2 = t;

    }
    cout << endl<<"Сумма: " << sum<<"\tПроизведение: "<< pr << "\tСреднее арифметическое: " << sr << endl << endl;

    cout << "Стэк2: ";
    while (head2 != NULL) //выводим стэк2 в консоль
    {
        cout << (*head2).d << " ";
        head2 = (*head2).next;
    }
    cout << endl;
}

void main()
{
    setlocale(LC_ALL, "RUS");
    srand(time(NULL));

    int K=10;
    cout << "Количество элементов: " << K << endl;
    cout << endl;

    //================ ===========
    och* nach;
    och* end;
    nach = NULL;
    end = NULL;
    //================ ===========
    och * tmp = new (och);
    (*tmp).next = NULL; // связь очереди с вновь созданным элементом
    (*tmp).d = rand() % 20;
    end = tmp;
    nach = tmp;
    int count = 1;
    cout << "1 элемент очереди = " << (*tmp).d << endl;

    //dobavka

    while (count !=K)
    {
        count++;
        tmp = new (och);
        (*tmp).next = NULL;
        (*tmp).d = rand() % 20;
        (*end).next = tmp;
        end = tmp;

        cout << count <<" элемент очереди = " << (*tmp).d << endl;
    }

    cout << endl << "Очередь: ";
    while (nach != NULL)
    {
        cout << (*nach).d << " ";
        nach = (*nach).next;
    }
    cout << endl;



    ///////////////////////  СТЭК /////////////////////////////

    cout << endl<<"Задание со стэком"<<endl<<endl<<"Количество элементов: ";
    cin >> K;
    cout << endl;

    STEK* head;//указатель на вершину стека
    head = NULL; //исходное состояние стека

    STEK* t = NULL;

    for (int i = 0; i <= K; i++) //заполнение стэка 
    {
        t = new (STEK);
        (*t).next = NULL;
        (*t).d = rand() % 10 + (rand() % 10) * 0.1;
        (*t).next = head;
        head = t;
        
        printS(head, K); //вывод стэка при заполнении
    }
    cout <<"Стэк заполнен." << endl << endl;

    printS(head, K);

    ZapolnS(head, K); //получение данных и заполнение стэк2


}

//Количество элементов : 10
//
//1 элемент очереди = 9
//2 элемент очереди = 4
//3 элемент очереди = 8
//4 элемент очереди = 16
//5 элемент очереди = 9
//6 элемент очереди = 0
//7 элемент очереди = 5
//8 элемент очереди = 9
//9 элемент очереди = 17
//10 элемент очереди = 14
//
//Очередь: 9 4 8 16 9 0 5 9 17 14
//
//Задание со стэком
//
//Количество элементов : 5
//
//Стэк : 1.5
//Стэк : 4.5 1.5
//Стэк : 3.4 4.5 1.5
//Стэк : 1.7 3.4 4.5 1.5
//Стэк : 9.7 1.7 3.4 4.5 1.5
//Стэк : 6.8 9.7 1.7 3.4 4.5 1.5
//Стэк заполнен.
//
//Стэк : 6.8 9.7 1.7 3.4 4.5 1.5
//
//Стэк2 заполнен.
//
//Стэк2 : 27.6 2573.43 4.6


//Количество элементов : 10
//
//1 элемент очереди = 15
//2 элемент очереди = 2
//3 элемент очереди = 2
//4 элемент очереди = 2
//5 элемент очереди = 1
//6 элемент очереди = 18
//7 элемент очереди = 11
//8 элемент очереди = 16
//9 элемент очереди = 3
//10 элемент очереди = 5
//
//Очередь: 15 2 2 2 1 18 11 16 3 5
//
//Задание со стэком
//
//Количество элементов : 10
//
//Стэк : 0.2
//Стэк : 8.8 0.2
//Стэк : 2.3 8.8 0.2
//Стэк : 5.6 2.3 8.8 0.2
//Стэк : 1.3 5.6 2.3 8.8 0.2
//Стэк : 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк : 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк : 6.3 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк : 9.8 6.3 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк : 8.2 9.8 6.3 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк : 7.4 8.2 9.8 6.3 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//Стэк заполнен.
//
//Стэк : 7.4 8.2 9.8 6.3 6.9 3.5 1.3 5.6 2.3 8.8 0.2
//
//Стэк2 заполнен.
//
//Стэк2 : 60.3 2.66625e+06 5.48182

//Количество элементов : 10
//
//1 элемент очереди = 14
//2 элемент очереди = 11
//3 элемент очереди = 4
//4 элемент очереди = 10
//5 элемент очереди = 4
//6 элемент очереди = 11
//7 элемент очереди = 13
//8 элемент очереди = 16
//9 элемент очереди = 14
//10 элемент очереди = 4
//
//Очередь: 14 11 4 10 4 11 13 16 14 4
//
//Задание со стэком
//
//Количество элементов : 15
//
//Стэк : 5
//Стэк : 0.6 5
//Стэк : 4.3 0.6 5
//Стэк : 1.2 4.3 0.6 5
//Стэк : 2.7 1.2 4.3 0.6 5
//Стэк : 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 6.3 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 4 6.3 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 7.9 4 6.3 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк : 9.1 7.9 4 6.3 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//Стэк заполнен.
//
//Стэк : 9.1 7.9 4 6.3 3.1 0.1 2.6 8.8 2.6 3.8 7.6 2.7 1.2 4.3 0.6 5
//
//Стэк2 заполнен.
//
//Стэк2 : 69.7 4.03266e+07 4.35625

//Количество элементов : 10
//
//1 элемент очереди = 10
//2 элемент очереди = 11
//3 элемент очереди = 2
//4 элемент очереди = 2
//5 элемент очереди = 12
//6 элемент очереди = 17
//7 элемент очереди = 14
//8 элемент очереди = 4
//9 элемент очереди = 2
//10 элемент очереди = 11
//
//Очередь: 10 11 2 2 12 17 14 4 2 11
//
//Задание со стэком
//
//Количество элементов : 25
//
//Стэк : 8.5
//Стэк : 2.7 8.5
//Стэк : 3.4 2.7 8.5
//Стэк : 7.2 3.4 2.7 8.5
//Стэк : 9.2 7.2 3.4 2.7 8.5
//Стэк : 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 9.3 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 7.1 9.3 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 7 7.1 9.3 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк : 2.9 7 7.1 9.3 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//Стэк заполнен.
//
//Стэк : 2.9 7 7.1 9.3 0.8 1.5 4.6 6.5 8.1 5.3 4.3 0.2 0.4 9.3 4.9 2.9 1.6 6 5.1 7.4 6.8 9.2 7.2 3.4 2.7 8.5
//
//Стэк2 заполнен.
//
//Стэк2 : 133 1.19523e+15 5.11538